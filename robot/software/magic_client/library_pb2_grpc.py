# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import library_pb2 as library__pb2


class LibraryServiceStub(object):
    """Library service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateLibrary = channel.unary_unary(
                '/library.v1.LibraryService/CreateLibrary',
                request_serializer=library__pb2.CreateLibraryRequest.SerializeToString,
                response_deserializer=library__pb2.CreateLibraryResponse.FromString,
                _registered_method=True)
        self.GetLibraries = channel.unary_unary(
                '/library.v1.LibraryService/GetLibraries',
                request_serializer=library__pb2.GetLibrariesRequest.SerializeToString,
                response_deserializer=library__pb2.GetLibrariesResponse.FromString,
                _registered_method=True)
        self.GetLibrary = channel.unary_unary(
                '/library.v1.LibraryService/GetLibrary',
                request_serializer=library__pb2.GetLibraryRequest.SerializeToString,
                response_deserializer=library__pb2.GetLibraryResponse.FromString,
                _registered_method=True)
        self.DeleteLibrary = channel.unary_unary(
                '/library.v1.LibraryService/DeleteLibrary',
                request_serializer=library__pb2.DeleteLibraryRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class LibraryServiceServicer(object):
    """Library service definition
    """

    def CreateLibrary(self, request, context):
        """CreateLibrary creates a new library for the authenticated user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLibraries(self, request, context):
        """GetLibraries returns all libraries owned by the authenticated user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLibrary(self, request, context):
        """GetLibrary returns a specific library by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteLibrary(self, request, context):
        """DeleteLibrary deletes a specific library by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LibraryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateLibrary': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLibrary,
                    request_deserializer=library__pb2.CreateLibraryRequest.FromString,
                    response_serializer=library__pb2.CreateLibraryResponse.SerializeToString,
            ),
            'GetLibraries': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLibraries,
                    request_deserializer=library__pb2.GetLibrariesRequest.FromString,
                    response_serializer=library__pb2.GetLibrariesResponse.SerializeToString,
            ),
            'GetLibrary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLibrary,
                    request_deserializer=library__pb2.GetLibraryRequest.FromString,
                    response_serializer=library__pb2.GetLibraryResponse.SerializeToString,
            ),
            'DeleteLibrary': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteLibrary,
                    request_deserializer=library__pb2.DeleteLibraryRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'library.v1.LibraryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('library.v1.LibraryService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class LibraryService(object):
    """Library service definition
    """

    @staticmethod
    def CreateLibrary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.v1.LibraryService/CreateLibrary',
            library__pb2.CreateLibraryRequest.SerializeToString,
            library__pb2.CreateLibraryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLibraries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.v1.LibraryService/GetLibraries',
            library__pb2.GetLibrariesRequest.SerializeToString,
            library__pb2.GetLibrariesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLibrary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.v1.LibraryService/GetLibrary',
            library__pb2.GetLibraryRequest.SerializeToString,
            library__pb2.GetLibraryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteLibrary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/library.v1.LibraryService/DeleteLibrary',
            library__pb2.DeleteLibraryRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
